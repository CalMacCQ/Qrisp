openapi: 3.0.2
info:
  title: Qrisp-Backend Interface
  description: >-
    An API specification for interfacing the high-level language Qrisp to backend providers.
  version: 0.0.1
servers:
  - url: http://localhost:8080/
components:
  schemas:
    Qubit:
      type: object
      properties:
        identifier:
          type: string
      required:
        - identifier
    Clbit:
      type: object
      properties:
        identifier:
          type: string
      required:
        - identifier
    Operation:
      type: object
      properties:
        name:
          type: string
        num_qubits:
          type: integer
        num_clbits:
          type: integer
        params:
          type: array
          items:
            type: float
        definition:
            $ref: '#/components/schemas/Operation'
      required:
        - name
        - num_qubits
        - num_clbits
    Instruction:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/Operation'
        qubits:
          type: array
          items:
            $ref: '#/components/schemas/Qubit'
        clbits:
          type: array
          items:
            $ref: '#/components/schemas/Clbit'
      required:
        - op
        - qubits
        - clbits
    QuantumCircuit:
      type: object
      properties:
        qubits:
          type: array
          items:
            $ref: '#/components/schemas/Qubit'
        clbits:
          type: array
          items:
            $ref: '#/components/schemas/Clbit'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Instruction'
    ConnectivityEdge:
      type: object
      properties:
        qb1:
          $ref: '#/components/schemas/Qubit'
        qb2:
          $ref: '#/components/schemas/Qubit'
      required:
        - qb1
        - qb2
    BackendStatus:
      type: object
      properties:
        name:
          type: string
        online:
          type: boolean
        qubit_list:
          type: array
          items:
            $ref: '#/components/schemas/Qubit'
        elementary_ops:
          type: array
          items:
            type: integer
        connectivity_map:
          type: array
          items:
            $ref: '#/components/schemas/ConnectivityEdge'
      required:
        - name
        - online
    ErrorMessage:
      type: object
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
        error_message:
          type: string
paths:
    /run: 
        post:
          description: runs a circuit
          operationId: run
          requestBody:
            description: The user to create
            content:
              application/json:
                schema:
                    type: object
                    properties:
                        qc:
                            $ref: '#/components/schemas/QuantumCircuit'
                        shots:
                            type: integer
                        token:
                            type: string
          responses:
            '200':
              description: Circuit run successfull
              content:
                application/json:
                  schema:
                    type: object
                    additionalProperties:
                        type: integer
            default:
              description: Unexpected error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorMessage'
    /ping: 
        get:
          description: Returns the status of a backend
          operationId: ping
          responses:
            '200':
              description: Backend successfully pinged
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/BackendStatus'
            default:
              description: Unexpected error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorMessage'
