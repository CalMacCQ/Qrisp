openapi: 3.0.2
info:
  description: An API specification for interfacing the high-level language Qrisp
    to backend providers.
  title: Qrisp-Backend Interface
  version: 0.0.1
servers:
- url: http://localhost:8080/
paths:
  /ping:
    get:
      description: Returns the status of a backend
      operationId: ping
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendStatus'
          description: Backend successfully pinged
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unexpected error
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /run:
    post:
      description: runs a circuit
      operationId: run
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                qc:
                  $ref: '#/components/schemas/QuantumCircuit'
                shots:
                  title: shots
                  type: integer
                token:
                  title: token
                  type: string
              title: inline_object
              type: object
        description: The user to create
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: integer
                type: object
          description: Circuit run successfull
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Unexpected error
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  requestBodies:
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    Qubit:
      example:
        identifier: identifier
      properties:
        identifier:
          title: identifier
          type: string
      required:
      - identifier
      title: Qubit
      type: object
    Clbit:
      properties:
        identifier:
          title: identifier
          type: string
      required:
      - identifier
      title: Clbit
      type: object
    Operation:
      properties:
        name:
          title: name
          type: string
        num_qubits:
          title: num_qubits
          type: integer
        num_clbits:
          title: num_clbits
          type: integer
        params:
          items:
            type: float
          title: params
          type: array
        definition:
          $ref: '#/components/schemas/Operation'
      required:
      - name
      - num_clbits
      - num_qubits
      title: Operation
      type: object
    Instruction:
      properties:
        op:
          $ref: '#/components/schemas/Operation'
        qubits:
          items:
            $ref: '#/components/schemas/Qubit'
          title: qubits
          type: array
        clbits:
          items:
            $ref: '#/components/schemas/Clbit'
          title: clbits
          type: array
      required:
      - clbits
      - op
      - qubits
      title: Instruction
      type: object
    QuantumCircuit:
      properties:
        qubits:
          items:
            $ref: '#/components/schemas/Qubit'
          title: qubits
          type: array
        clbits:
          items:
            $ref: '#/components/schemas/Clbit'
          title: clbits
          type: array
        data:
          items:
            $ref: '#/components/schemas/Instruction'
          title: data
          type: array
      title: QuantumCircuit
      type: object
    ConnectivityEdge:
      example:
        qb2:
          identifier: identifier
        qb1:
          identifier: identifier
      properties:
        qb1:
          $ref: '#/components/schemas/Qubit'
        qb2:
          $ref: '#/components/schemas/Qubit'
      required:
      - qb1
      - qb2
      title: ConnectivityEdge
      type: object
    BackendStatus:
      example:
        connectivity_map:
        - qb2:
            identifier: identifier
          qb1:
            identifier: identifier
        - qb2:
            identifier: identifier
          qb1:
            identifier: identifier
        qubit_list:
        - identifier: identifier
        - identifier: identifier
        name: name
        online: true
        elementary_ops:
        - 0
        - 0
      properties:
        name:
          title: name
          type: string
        online:
          title: online
          type: boolean
        qubit_list:
          items:
            $ref: '#/components/schemas/Qubit'
          title: qubit_list
          type: array
        elementary_ops:
          items:
            type: integer
          title: elementary_ops
          type: array
        connectivity_map:
          items:
            $ref: '#/components/schemas/ConnectivityEdge'
          title: connectivity_map
          type: array
      required:
      - name
      - online
      title: BackendStatus
      type: object
    ErrorMessage:
      properties:
        error_code:
          title: error_code
          type: string
        error_message:
          title: error_message
          type: string
      required:
      - error_code
      - error_message
      title: ErrorMessage
      type: object
    inline_object:
      properties:
        qc:
          $ref: '#/components/schemas/QuantumCircuit'
        shots:
          title: shots
          type: integer
        token:
          title: token
          type: string
      title: inline_object
      type: object
