# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.quantum_circuit import QuantumCircuit
from openapi_server import util

from openapi_server.models.quantum_circuit import QuantumCircuit  # noqa: E501

class InlineObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qc=None, shots=None, token=None):  # noqa: E501
        """InlineObject - a model defined in OpenAPI

        :param qc: The qc of this InlineObject.  # noqa: E501
        :type qc: QuantumCircuit
        :param shots: The shots of this InlineObject.  # noqa: E501
        :type shots: int
        :param token: The token of this InlineObject.  # noqa: E501
        :type token: str
        """
        self.openapi_types = {
            'qc': QuantumCircuit,
            'shots': int,
            'token': str
        }

        self.attribute_map = {
            'qc': 'qc',
            'shots': 'shots',
            'token': 'token'
        }

        self._qc = qc
        self._shots = shots
        self._token = token

    @classmethod
    def from_dict(cls, dikt) -> 'InlineObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_object of this InlineObject.  # noqa: E501
        :rtype: InlineObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qc(self):
        """Gets the qc of this InlineObject.


        :return: The qc of this InlineObject.
        :rtype: QuantumCircuit
        """
        return self._qc

    @qc.setter
    def qc(self, qc):
        """Sets the qc of this InlineObject.


        :param qc: The qc of this InlineObject.
        :type qc: QuantumCircuit
        """

        self._qc = qc

    @property
    def shots(self):
        """Gets the shots of this InlineObject.


        :return: The shots of this InlineObject.
        :rtype: int
        """
        return self._shots

    @shots.setter
    def shots(self, shots):
        """Sets the shots of this InlineObject.


        :param shots: The shots of this InlineObject.
        :type shots: int
        """

        self._shots = shots

    @property
    def token(self):
        """Gets the token of this InlineObject.


        :return: The token of this InlineObject.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this InlineObject.


        :param token: The token of this InlineObject.
        :type token: str
        """

        self._token = token
